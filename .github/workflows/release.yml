name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  id-token: write

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Build package
      run: python -m build

    - name: Check package
      run: twine check dist/*

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}

    - name: Extract release notes
      id: extract-release-notes
      run: |
        # Extract version from tag
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        
        # Function to extract changelog section for a specific version
        extract_changelog_section() {
          local version=$1
          local in_section=false
          local content=""
          
          while IFS= read -r line; do
            # Check if we're starting the target version section
            if [[ $line =~ ^\#\#[[:space:]]\[?${version}\]? ]]; then
              in_section=true
              continue
            fi
            
            # Check if we've hit another version section (end of our section)
            if [[ $in_section == true && $line =~ ^\#\#[[:space:]]\[ ]]; then
              break
            fi
            
            # If we're in the target section, collect the content
            if [[ $in_section == true ]]; then
              content="${content}${line}"$'\n'
            fi
          done < CHANGELOG.md
          
          echo "$content"
        }
        
        # Extract changelog content for this version
        CHANGELOG_CONTENT=$(extract_changelog_section "$VERSION")
        
        # Create release notes with extracted changelog content
        cat > release_notes.md << EOF
        ## 🚀 ShadowAI v${VERSION}
        
        ### Installation
        
        \`\`\`bash
        pip install shadowai==${VERSION}
        \`\`\`
        
        ### Changes in this release
        
        ${CHANGELOG_CONTENT}
        
        ### Documentation
        
        For detailed documentation and examples, visit our [GitHub repository](https://github.com/KevinZhang19870314/shadowai).
        
        ### Full Changelog
        
        **Full Changelog**: https://github.com/KevinZhang19870314/shadowai/blob/main/CHANGELOG.md
        EOF

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        body_path: release_notes.md
        files: |
          dist/*.tar.gz
          dist/*.whl
        draft: false
        prerelease: ${{ contains(github.ref, '-') }}
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Update latest release badge
      run: |
        echo "✅ Release v${{ steps.extract-release-notes.outputs.VERSION }} created successfully!"
        echo "📦 Package published to PyPI: https://pypi.org/project/shadowai/${{ steps.extract-release-notes.outputs.VERSION }}/"
        echo "🏷️ GitHub Release: https://github.com/KevinZhang19870314/shadowai/releases/tag/v${{ steps.extract-release-notes.outputs.VERSION }}" 